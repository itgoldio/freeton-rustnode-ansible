---

- name: Create freeton dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ freeton_node_user }}"
    group: "{{ freeton_node_group }}"
    mode: u=rwx,g=rx,o=
  loop:
    - "/opt/freeton"
    - "/home/{{ freeton_node_user }}"
    - "{{ freeton_node_bin_dir }}"
    - "{{ freeton_node_src_dir }}"
    - "{{ freeton_node_work_dir }}"
    - "{{ freeton_node_config_dir }}"
    - "{{ freeton_node_contracts_dir }}"
    - "{{ freeton_node_log_dir }}"
    - "{{ freeton_node_tools_dir }}"
    - "{{ freeton_node_scripts }}"
    - "{{ freeton_node_election }}"

- name: Create freeton keys dir
  file:
    path: "{{ freeton_node_keys }}"
    state: directory
    owner: "{{ freeton_node_user }}"
    group: "{{ freeton_node_group }}"
    mode: u=rwx,g=rx,o=

- name: Include os specific tasks
  include_tasks: "{{ ansible_pkg_mgr }}.yml"

- name: Download Rust init
  get_url:
    url: '{{ rustup_mirror }}/{{ rustup_platform }}/rustup-init'
    dest: '/usr/local/bin/rustup-init'
    mode: u=rwx,g=rx,o=

- name: Install Rust
  command: '/usr/local/bin/rustup-init -y --default-toolchain {{ rustup_default_toolchain }}'

- name: Get Rust version
  command: 'rustc -V'
  changed_when: false
  register: rust_version

- name: Get freeton node sources
  git:
    repo: "{{ freeton_node_github_repo }}"
    dest: "{{ freeton_node_src_dir }}/freeton_node"
    version: "{{ freeton_node_github_commit_id }}"
  register: freeton_node_sources

- name: Get freeton node tools sources
  git:
    repo: "{{ freeton_node_tools_github_repo }}"
    dest: "{{ freeton_node_src_dir }}/freeton_node_tools"
    version: "{{ freeton_node_tools_github_commit_id }}"
  register: freeton_node_tools_sources

- name: Get tonos cli sources
  git:
    repo: "{{ tonos_cli_github_repo }}"
    dest: "{{ freeton_node_src_dir }}/tonos_cli"
    version: "{{ tonos_cli_github_commit_id }}"
  register: tonos_cli_sources

- name: Get tvm linker sources
  git:
    repo: "{{ tvm_linker_github_repo }}"
    dest: "{{ freeton_node_src_dir }}/tvm_linker"
    version: "{{ tvm_linker_github_commit_id }}"
    force: yes
  register: tvm_linker_sources

- name: Clear debug directory
  file:
    path: "{{ freeton_node_src_dir }}/debug"
    state: absent

- name: Build freeton node
  block:
    - name: Update repo deps | freeton node
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo update --manifest-path {{ freeton_node_src_dir }}/freeton_node/Cargo.toml'
    - name: Build repo | freeton node
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo build --manifest-path {{ freeton_node_src_dir }}/freeton_node/Cargo.toml --target-dir {{ freeton_node_src_dir }} --release{% if freeton_node_metrics_enabled == true %} --features metrics{% endif %}'
  when: freeton_node_sources.changed or freeton_node_force_recompile
  environment:
    RUSTFLAGS: "{{ rust_flags }}"
    RUST_VERSION: "{{ rust_version.stdout }}"
    GC_TON_NODE: "{{ freeton_node_sources.after }}"


- name: Build freeton node tools
  block:
    - name: Update repo deps | node tools
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo update --manifest-path {{ freeton_node_src_dir }}/freeton_node_tools/Cargo.toml'
    - name: Build repo | node tools
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo build --manifest-path {{ freeton_node_src_dir }}/freeton_node_tools/Cargo.toml --target-dir {{ freeton_node_src_dir }} --release'
  when: freeton_node_tools_sources.changed or freeton_node_tools_force_recompile
  environment:
    RUSTFLAGS: "{{ rust_flags }}"

- name: Build tonos cli
  block:
    - name: Update repo deps | tonos cli
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo update --manifest-path {{ freeton_node_src_dir }}/tonos_cli/Cargo.toml'
    - name: Build repo | tonos cli
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo build --manifest-path {{ freeton_node_src_dir }}/tonos_cli/Cargo.toml --target-dir {{ freeton_node_src_dir }} --release'
  when: tonos_cli_sources.changed or tonos_cli_force_recompile
  environment:
    RUSTFLAGS: "{{ rust_flags }}"

- name: Build tvm linker
  block:
    - name: Update repo deps | tvm linker
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo update --manifest-path {{ freeton_node_src_dir }}/tvm_linker/tvm_linker/Cargo.toml'
    - name: Build repo | tvm linker
      command: '{{ ansible_env.HOME }}/.cargo/bin/cargo build --manifest-path {{ freeton_node_src_dir }}/tvm_linker/tvm_linker/Cargo.toml --target-dir {{ freeton_node_src_dir }} --release'
  when: tvm_linker_sources.changed or tvm_linker_force_recompile
  environment:
    RUSTFLAGS: "{{ rust_flags }}"