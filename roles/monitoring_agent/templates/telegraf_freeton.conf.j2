[[outputs.influxdb]]
  urls = ["http://{{ hostvars[groups['monitoring_server'][0]].inventory_hostname }}:8086"]
  skip_database_creation = true
  database = "{{ INFLUXDB_DB_NAME }}"
  username = "{{ INFLUXDB_USERNAME }}"
  password = "{{ INFLUXDB_PASSWORD }}"

# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## Comment this line if you want the raw CPU time metrics
  fielddrop = ["time_*"]


# Read metrics about disk usage by mount point
[[inputs.disk]]
  ## By default, telegraf gather stats for all mountpoints.
  ## Setting mountpoints will restrict the stats to the specified mountpoints.
  # mount_points = ["/"]

  ## Ignore some mountpoints by filesystem type. For example (dev)tmpfs (usually
  ## present on /run, /var/run, /dev/shm or /dev).
  ignore_fs = ["dev", "run", "shm", "gpfs", "proc", "udev", "tmpfs", "autofs", "devpts", "devtmpfs", "overlay", "squashfs", "vfat"]


# Read metrics about disk IO by device
[[inputs.diskio]]
  ## By default, telegraf will gather stats for all devices including
  ## disk partitions.
  ## Setting devices will restrict the stats to the specified devices.
  # devices = ["sda", "sdb"]
  ## Uncomment the following line if you need disk serial numbers.
  # skip_serial_number = false


# Get kernel statistics from /proc/stat
[[inputs.kernel]]
  # no configuration


# Read metrics about memory usage
[[inputs.mem]]
  # no configuration


# Get the number of processes and group them by status
[[inputs.processes]]
  # no configuration


# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration


# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration

# Read metrics about network interface usage
[[inputs.net]]
  # collect data only about specific interfaces
  # interfaces = ["eth0"]

[[inputs.nstat]]
  # no configuration

[[inputs.conntrack]]
  # no configuration

[[inputs.netstat]]
  # no configuration

[[inputs.interrupts]]
  # no configuration

[[inputs.linux_sysctl_fs]]
  # no configuration

[[inputs.internal]]
  # no configuration

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-node-diff.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-node-diff"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "integer" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-election-state.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-election-state"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "string" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-election-date-start.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-election-date-start"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "integer" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-election-date-end.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-election-date-end"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "integer" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-depool-balance.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-depool-balance"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "long" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-depool-proxy-1-balance.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-depool-proxy-1-balance"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "long" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-depool-proxy-2-balance.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-depool-proxy-2-balance"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "long" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-wallet-balance.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-wallet-balance"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "long" # required
  
[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-wallet-transaction-count.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-wallet-unsign-transaction-count"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "integer" # required

  
[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-node-participant-state.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-node-participant-state"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "string" # required


[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-node-validate-current.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-node-validate-current"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "string" # required

[[inputs.exec]]
  ## Commands array
  commands = ["{{ freeton_node_scripts }}/ton-node-validate-next.sh"]

  ## override the default metric name of "exec"
  name_override = "ton-node-validate-next"
  timeout = "60s"

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ##   https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "string" # required

{% if freeton_node_metrics_enabled == true %}
[[inputs.statsd]]
  ## Protocol, must be "tcp", "udp4", "udp6" or "udp" (default=udp)
  protocol = "udp"

  ## MaxTCPConnection - applicable when protocol is set to tcp (default=250)
  max_tcp_connections = 250

  ## Enable TCP keep alive probes (default=false)
  tcp_keep_alive = false

  ## Specifies the keep-alive period for an active network connection.
  ## Only applies to TCP sockets and will be ignored if tcp_keep_alive is false.
  ## Defaults to the OS configuration.
  # tcp_keep_alive_period = "2h"

  ## Address and port to host UDP listener on
  service_address = ":9125"

  ## The following configuration options control when telegraf clears it's cache
  ## of previous values. If set to false, then telegraf will only clear it's
  ## cache when the daemon is restarted.
  ## Reset gauges every interval (default=true)
  delete_gauges = true
  ## Reset counters every interval (default=true)
  delete_counters = true
  ## Reset sets every interval (default=true)
  delete_sets = true
  ## Reset timings & histograms every interval (default=true)
  delete_timings = true

  ## Percentiles to calculate for timing & histogram stats.
  percentiles = [50.0, 90.0, 99.0, 99.9, 99.95, 100.0]

  ## separator to use between elements of a statsd metric
  metric_separator = "_"

  ## Parses tags in the datadog statsd format
  ## http://docs.datadoghq.com/guides/dogstatsd/
  ## deprecated in 1.10; use datadog_extensions option instead
  parse_data_dog_tags = false

  ## Parses extensions to statsd in the datadog statsd format
  ## currently supports metrics and datadog tags.
  ## http://docs.datadoghq.com/guides/dogstatsd/
  datadog_extensions = false

  ## Statsd data translation templates, more info can be read here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/TEMPLATE_PATTERN.md
  templates = [
    "measurement.measurement.id.state"
  ]

  ## Number of UDP messages allowed to queue up, once filled,
  ## the statsd server will start dropping packets
  allowed_pending_messages = 10000

  ## Number of timing/histogram values to track per-measurement in the
  ## calculation of percentiles. Raising this limit increases the accuracy
  ## of percentiles but also increases the memory usage and cpu time.
  percentile_limit = 1000

  ## Maximum socket buffer size in bytes, once the buffer fills up, metrics
  ## will start dropping.  Defaults to the OS default.
  # read_buffer_size = 65535

  ## Max duration (TTL) for each metric to stay cached/reported without being updated.
  # max_ttl = "10h"
{% endif %}